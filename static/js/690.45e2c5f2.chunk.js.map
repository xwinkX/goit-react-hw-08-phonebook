{"version":3,"file":"static/js/690.45e2c5f2.chunk.js","mappings":"yLACA,MAA8B,iCAA9B,EAAuE,2B,2BCIxD,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,KAAlB,IAsBlC,OACE,kBAAMC,UAAWC,EAAiBC,SArBjB,SAAAC,GACjB,IAAMC,EAAOD,EAAME,cACnBF,EAAMG,iBACN,IAAMC,EAAc,CAClBC,KAAMJ,EAAKK,SAASD,KAAKE,MACzBC,OAAQP,EAAKK,SAASE,OAAOD,OAGzBE,EAAiBjB,EAASkB,MAC9B,SAAAC,GAAI,OAAIA,EAAKN,OAASD,EAAYC,IAA9B,IAGFI,EACFG,MAAM,GAAD,OAAIH,EAAeJ,KAAnB,4BAELf,GAASuB,EAAAA,EAAAA,IAAYT,IAEvBH,EAAKa,OACN,EAGC,WACE,kCACA,4BACE,kBACEC,KAAK,OACLV,KAAK,OACLW,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,oCACA,4BACE,kBACEH,KAAK,MACLV,KAAK,SACLW,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRrB,UAAWC,OAGf,8CAGL,CCtDD,MAAqB,wBAArB,EAAiD,uBAAjD,EAAiF,4BCqBjF,EAjBoB,SAAC,GAA0B,IAAxBqB,EAAuB,EAAvBA,GAAId,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OACzBlB,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAIM,UAAWC,EAAf,WACE,cAAGD,UAAWC,EAAd,SAAsBO,KACtB,uBAAIG,KACJ,mBACEX,UAAWC,EACXsB,QAAS,kBAAM9B,GAAS+B,EAAAA,EAAAA,IAAeF,GAA9B,EAFX,0DAQL,ECnBD,EAAqB,wBCyBrB,EArBoB,WAClB,IAAM3B,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,KAAlB,IAE5B0B,GADS7B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQ4B,MAAlB,IACAC,cAC1BC,EAAejC,EAAS+B,QAAO,SAAA5B,GAAO,OAC1CA,EAAQU,KAAKmB,cAAcE,SAASJ,EADM,IAI5C,OACE,eAAIzB,UAAWC,EAAf,SACG2B,EAAaE,KAAI,gBAAGR,EAAH,EAAGA,GAAId,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OAChB,SAAC,EAAD,CAAsBW,GAAIA,EAAId,KAAMA,EAAMG,OAAQA,GAAhCW,EADF,KAKvB,ECnBD,EAAqB,mBCoBrB,EAhBe,WACb,IAAM7B,GAAWC,EAAAA,EAAAA,MACjB,OACE,iCACE,eAAIM,UAAWC,EAAf,oCACA,4BACE,kBACEiB,KAAK,OACLa,SAAU,SAAA5B,GAAK,OACbV,GAASuC,EAAAA,EAAAA,IAAe7B,EAAME,cAAcK,OAD/B,QAOxB,ECJD,EAZiB,WACf,OACE,4BACE,uCACA,SAAClB,EAAD,KACA,sCACA,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,ECbD,EAA4B,iCCU5B,EARsB,WACpB,OACE,gBAAKQ,UAAWC,EAAhB,UACE,SAAC,EAAD,KAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactForm/ContactForm.module.css?4d46","components/Contacts/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactItem/ContactItem.module.css?65d1","components/Contacts/ContactItem/ContactItem.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactList/ContactList.module.css?357e","components/Contacts/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Filter/Filter.module.css?8ad8","components/Contacts/Filter/Filter.js","components/Contacts/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/ContactsPages/ContactsPages.module.css?b631","pages/ContactsPages/ContactsPages.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__NTi+V\",\"input\":\"ContactForm_input__UVgk1\"};","import css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contact/contact';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contact.items);\n\n  const formSubmit = event => {\n    const form = event.currentTarget;\n    event.preventDefault();\n    const dataContact = {\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    const repeatContacts = contacts.find(\n      elem => elem.name === dataContact.name\n    );\n\n    if (repeatContacts) {\n      alert(`${repeatContacts.name} is already in contacts`);\n    } else {\n      dispatch(addContacts(dataContact));\n    }\n    form.reset();\n  };\n\n  return (\n    <form className={css.contactForm} onSubmit={formSubmit}>\n      <h2>Name</h2>\n      <label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <h2>Number</h2>\n      <label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.input}\n        />\n      </label>\n      <button>Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.string),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactItem_li__Nu5s8\",\"p\":\"ContactItem_p__HySq+\",\"button\":\"ContactItem_button__PIPaE\"};","import css from './ContactItem.module.css';\n// import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { removeContacts } from 'redux/contact/contact';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.li}>\n      <p className={css.p}>{name}</p>\n      <p>{number}</p>\n      <button\n        className={css.button}\n        onClick={() => dispatch(removeContacts(id))}\n      >\n        Удалить\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\n// ContactItem.propTypes = {\n//   id: PropTypes.string.isRequired,\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"ContactList_ul__P0+L6\"};","import ContactItem from '../ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\n\nconst ContactList = () => {\n  const contacts = useSelector(state => state.contact.items);\n  const filter = useSelector(state => state.contact.filter);\n  const normalizedFilter = filter.toLowerCase();\n  const resultFilter = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  return (\n    <ul className={css.ul}>\n      {resultFilter.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"h2\":\"Filter_h2__ymgpe\"};","import css from './Filter.module.css';\n// import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contact/contact';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <>\n      <h2 className={css.h2}>Find contacts by name</h2>\n      <label>\n        <input\n          type=\"text\"\n          onChange={event =>\n            dispatch(filterContacts(event.currentTarget.value))\n          }\n        />\n      </label>\n    </>\n  );\n};\nexport default Filter;\n","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nconst Contacts = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactsPages_container__5IWcr\"};","import Contacts from 'components/Contacts/Contacts';\nimport css from './ContactsPages.module.css';\n\nconst ContactsPages = () => {\n  return (\n    <div className={css.container}>\n      <Contacts />\n    </div>\n  );\n};\n\nexport default ContactsPages;\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","state","contact","items","className","css","onSubmit","event","form","currentTarget","preventDefault","dataContact","name","elements","value","number","repeatContacts","find","elem","alert","addContacts","reset","type","pattern","title","required","id","onClick","removeContacts","normalizedFilter","filter","toLowerCase","resultFilter","includes","map","onChange","filterContacts"],"sourceRoot":""}