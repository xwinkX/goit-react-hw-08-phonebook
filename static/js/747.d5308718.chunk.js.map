{"version":3,"file":"static/js/747.d5308718.chunk.js","mappings":"2NACA,EAA8B,iCAA9B,EAAuE,2B,iDCqEvE,EA/DoB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACfC,EAAe,CACnBC,KAAM,GACNC,OAAQ,IAEV,GAA0BC,EAAAA,EAAAA,WAAS,UAAKH,IAAxC,eAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdN,EAAgBM,EAAhBN,KAAMO,EAAUD,EAAVC,MAEdH,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEfR,EAAOO,GAFQ,GAInB,EAOOP,EAAiBG,EAAjBH,KAAMC,EAAWE,EAAXF,OAEd,OACE,kBAAMQ,UAAWC,EAAiBC,OAAO,GAAGb,SATzB,SAAAc,GACnBA,EAAEC,iBACFf,GAAS,UAAKK,IACdC,GAAS,UAAKL,GACf,EAKC,WACE,SAACe,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,OAAOC,GAAI,CAAEC,SAAU,GAA1D,mBAGA,4BACE,SAACC,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,OACLC,SAAUjB,EACVL,KAAK,OACLO,MAAOP,EACPuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,SAACX,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,OAAOC,GAAI,CAAEC,SAAU,GAA1D,qBAGA,4BACE,SAACC,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,MACLC,SAAUjB,EACVL,KAAK,SACLO,MAAON,EACPsB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRhB,UAAWC,OAGf,SAACgB,EAAA,EAAD,CAAQL,KAAK,SAASN,QAAQ,YAA9B,2BAKL,ECnED,EAAqB,wBCoBrB,EAhBoB,SAAC,GAAoC,IAAlCY,EAAiC,EAAjCA,GAAI3B,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQ2B,EAAe,EAAfA,SACvC,OACE,gBAAInB,UAAWC,EAAf,WACE,SAACI,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,OAAOC,GAAI,CAAEC,SAAU,EAAGW,GAAI,GAAjE,SACG7B,KAEH,SAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,OAAOC,GAAI,CAAEC,SAAU,EAAGW,GAAI,GAAjE,SACG5B,KAEH,SAACyB,EAAA,EAAD,CAAQX,QAAQ,YAAYe,QAAS,kBAAMF,EAASD,EAAf,EAArC,sBAKL,EClBD,EAAqB,wBC0BrB,EAtBoB,SAAC,GAA4B,IAA1BI,EAAyB,EAAzBA,SAAUH,EAAe,EAAfA,SAE/B,OACE,eAAInB,UAAWC,EAAf,SACGqB,EAASC,KAAI,gBAAGL,EAAH,EAAGA,GAAI3B,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,SAAC,EAAD,CAEE0B,GAAIA,EACJ3B,KAAMA,EACNC,OAAQA,EACR2B,SAAUA,GAJLD,EAFK,KAWnB,ECED,EAlBe,SAAC,GAA6B,IAA3BM,EAA0B,EAA1BA,YAAaC,EAAa,EAAbA,OAC7B,OACE,iCACE,SAACpB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,OAAOC,GAAI,CAAEC,SAAU,EAAGiB,GAAI,GAAjE,oCAGA,4BACE,SAAChB,EAAA,EAAD,CACEC,KAAK,QACLC,KAAK,OACLC,SAAUW,EACV1B,MAAO2B,EACPlC,KAAK,eAKd,E,8BCnBYoC,EAAsB,SAAC,GAA0B,IAAxBL,EAAuB,EAAvBA,SAAUG,EAAa,EAAbA,OAC9C,IAAKA,EACH,OAAOH,EAASM,MAElB,IAAMC,EAAmBJ,EAAOK,cAIhC,OAHeR,EAASM,MAAMH,QAAO,SAAAM,GAAO,OAC1CA,EAAQxC,KAAKuC,cAAcE,SAASH,EADM,GAI7C,ECXYI,EAAY,SAAC,GAAD,SAAGR,MAAH,EC8DzB,EA7CiB,WACf,IAAMH,GAAWY,EAAAA,EAAAA,IAAYP,GACvBF,GAASS,EAAAA,EAAAA,IAAYD,GAErBE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,IAYJ,OACE,iBACEI,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,SAAU,GACVC,MAAO,WAPX,WAUE,SAAC,EAAD,CAAaxD,SArBI,SAAAyD,GACnBX,GAASY,EAAAA,EAAAA,IAAWD,GACrB,KAoBG,SAACzC,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,KACVC,GAAI,CAAEC,SAAU,EAAGiB,GAAI,EAAGsB,GAAI,GAHhC,uBAOA,SAAC,EAAD,CAAQxB,YAtBQ,SAAC,GAAgB,IAAd3B,EAAa,EAAbA,OACrBsC,GAASc,EAAAA,EAAAA,GAAUpD,EAAOC,OAC3B,EAoBqC2B,OAAQA,KAC1C,SAAC,EAAD,CAAaH,SAAUA,EAAUH,SA1Bb,SAAAD,GACtBiB,GAASe,EAAAA,EAAAA,IAAchC,GACxB,MA2BF,EClDD,EARsB,WACpB,OACE,0BACE,SAAC,EAAD,KAGL,C","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactForm/ContactForm.module.css?4d46","components/Contacts/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactItem/ContactItem.module.css?65d1","components/Contacts/ContactItem/ContactItem.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactList/ContactList.module.css?357e","components/Contacts/ContactList/ContactList.js","components/Contacts/Filter/Filter.js","redux/contacts/contacts-selectors.js","redux/filter/filter-selector.js","components/Contacts/Contacts.jsx","pages/ContactsPages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__NTi+V\",\"input\":\"ContactForm_input__UVgk1\"};","import css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport Typography from '@mui/material/Typography';\nimport { TextField } from '@mui/material';\nimport Button from '@mui/material/Button';\n\nconst ContactForm = ({ onSubmit }) => {\n  const initialState = {\n    name: '',\n    number: '',\n  };\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={css.contactForm} action=\"\" onSubmit={handleSubmit}>\n      <Typography variant=\"h6\" component=\"span\" sx={{ flexGrow: 1 }}>\n        Name\n      </Typography>\n      <label>\n        <TextField\n          size=\"small\"\n          type=\"text\"\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <Typography variant=\"h6\" component=\"span\" sx={{ flexGrow: 1 }}>\n        Number\n      </Typography>\n      <label>\n        <TextField\n          size=\"small\"\n          type=\"tel\"\n          onChange={handleChange}\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.input}\n        />\n      </label>\n      <Button type=\"submit\" variant=\"contained\">\n        Add contact\n      </Button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactItem_li__Nu5s8\"};","import css from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst ContactItem = ({ id, name, number, onDelete }) => {\n  return (\n    <li className={css.li}>\n      <Typography variant=\"h6\" component=\"span\" sx={{ flexGrow: 1, mr: 2 }}>\n        {name}\n      </Typography>\n      <Typography variant=\"h6\" component=\"span\" sx={{ flexGrow: 1, mr: 2 }}>\n        {number}\n      </Typography>\n      <Button variant=\"contained\" onClick={() => onDelete(id)}>\n        Delete\n      </Button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"ContactList_ul__P0+L6\"};","import ContactItem from '../ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\n\nconst ContactList = ({ contacts, onDelete }) => {\n\n  return (\n    <ul className={css.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDelete={onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { TextField } from '@mui/material';\nimport Typography from '@mui/material/Typography';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ onSetFilter, filter }) => {\n  return (\n    <>\n      <Typography variant=\"h6\" component=\"span\" sx={{ flexGrow: 1, mb: 1 }}>\n        Find contacts by name\n      </Typography>\n      <label>\n        <TextField\n          size=\"small\"\n          type=\"text\"\n          onChange={onSetFilter}\n          value={filter}\n          name=\"filter\"\n        />\n      </label>\n    </>\n  );\n};\nexport default Filter;\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onSetFilter: PropTypes.func.isRequired,\n};\n","export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  return result;\n};\n","export const getFilter = ({ filter }) => filter;\n","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport Typography from '@mui/material/Typography';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from '../../redux/contacts/contacts-oparations';\nimport { setFilter } from '../../redux/filter/filter-actions';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selector';\n\nconst Contacts = () => {\n  const contacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = payload => {\n    dispatch(addContact(payload));\n  };\n\n  const onRemoveContact = id => {\n    dispatch(removeContact(id));\n  };\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 16,\n        color: '#010101',\n      }}\n    >\n      <ContactForm onSubmit={onAddContact} />\n      <Typography\n        variant=\"h4\"\n        component=\"h3\"\n        sx={{ flexGrow: 1, mb: 1, mt: 2 }}\n      >\n        Contacts\n      </Typography>\n      <Filter onSetFilter={onSetFilter} filter={filter} />\n      <ContactList contacts={contacts} onDelete={onRemoveContact} />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from 'components/Contacts/Contacts';\n\nconst ContactsPages = () => {\n  return (\n    <div>\n      <Contacts />\n    </div>\n  );\n};\n\nexport default ContactsPages;\n"],"names":["onSubmit","initialState","name","number","useState","state","setState","handleChange","target","value","prevState","className","css","action","e","preventDefault","Typography","variant","component","sx","flexGrow","TextField","size","type","onChange","pattern","title","required","Button","id","onDelete","mr","onClick","contacts","map","onSetFilter","filter","mb","getFilteredContacts","items","normalizedFilter","toLowerCase","contact","includes","getFilter","useSelector","dispatch","useDispatch","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color","payload","addContact","mt","setFilter","removeContact"],"sourceRoot":""}