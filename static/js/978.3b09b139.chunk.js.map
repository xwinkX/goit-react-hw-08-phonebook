{"version":3,"file":"static/js/978.3b09b139.chunk.js","mappings":"0NACA,GAAiB,E,mBC2DjB,EAzDc,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACTC,EAAe,CACnBC,MAAO,GACPC,SAAU,IAEZ,GAA0BC,EAAAA,EAAAA,WAAS,UAAKH,IAAxC,eAAOI,EAAP,KAAcC,EAAd,KAEMC,EAAe,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEdJ,GAAS,SAAAK,GAAS,yBACbA,GADa,cAEfF,EAAOC,GAFQ,GAInB,EAOOR,EAAoBG,EAApBH,MAAOC,EAAaE,EAAbF,SAEf,OACE,kBAAMS,OAAO,GAAGZ,SATG,SAAAa,GACnBA,EAAEC,iBACFd,GAAS,UAAKK,IACdC,GAAS,UAAKL,GACf,EAKC,WACE,iBAAKc,UAAWC,EAAAA,MAAhB,WACE,kBAAOD,UAAWC,EAAAA,MAAWC,QAAQ,GAArC,qBAGA,kBACEP,MAAOR,EACPO,KAAK,QACLS,SAAUX,EACVQ,UAAWC,EAAAA,MACXG,KAAK,QACLC,YAAY,kIAGhB,iBAAKL,UAAWC,EAAAA,MAAhB,WACE,kBAAOD,UAAWC,EAAAA,MAAWC,QAAQ,GAArC,oDAGA,kBACEP,MAAOP,EACPM,KAAK,WACLS,SAAUX,EACVQ,UAAWC,EAAAA,MACXG,KAAK,WACLC,YAAY,iKAGhB,gBAAKL,UAAWC,EAAAA,MAAhB,UACE,mBAAQG,KAAK,SAAb,gDAIP,E,wCChCD,EArBkB,WAChB,IAAME,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,GAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAOhB,OANgBH,EAAAA,EAAAA,IAAYI,EAAAA,IAOnB,SAAC,KAAD,CAAUC,GAAG,eAGpB,4BACE,wCACA,SAAC,EAAD,CAAO5B,SAVK,SAAA6B,GACdR,GAASS,EAAAA,EAAAA,GAAMD,GAChB,IASIJ,IAAU,uBAAIC,MAGpB,C,8ECzBM,IAAMF,EAAe,SAAC,GAAD,SAAGO,KAAgBC,OAAS,CAAC,CAA7B,EACfL,EAAS,SAAC,GAAD,SAAGI,KAAgBE,OAAnB,C","sources":["components/Login/Login.module.css","components/Login/Login.jsx","pages/LoginPage/LoginPage.jsx","redux/auth/auth-selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","import css from './Login.module.css';\nimport { useState } from 'react';\n\nconst Login = ({ onSubmit }) => {\n  const initialState = {\n    email: '',\n    password: '',\n  };\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { email, password } = state;\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <div className={css.group}>\n        <label className={css.label} htmlFor=\"\">\n          Email:\n        </label>\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          className={css.input}\n          type=\"email\"\n          placeholder=\"Введите email пользователя\"\n        />\n      </div>\n      <div className={css.group}>\n        <label className={css.label} htmlFor=\"\">\n          Пароль:\n        </label>\n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          className={css.input}\n          type=\"password\"\n          placeholder=\"Введите пароль пользователя\"\n        />\n      </div>\n      <div className={css.group}>\n        <button type=\"submit\">Войти</button>\n      </div>\n    </form>\n  );\n};\nexport default Login;\n","import Login from '../../components/Login/Login';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { login } from '../../redux/auth/auth-operations';\nimport { getAuthError, isAuth } from 'redux/auth/auth-selectors';\nimport { Navigate } from 'react-router-dom';\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n  const isLogin = useSelector(isAuth);\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  if (isLogin) {\n    return <Navigate to=\"/contacts\" />;\n  }\n  return (\n    <div>\n      <h2>Login Page</h2>\n      <Login onSubmit={onLogin} />\n      {status && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export const getAuthError = ({ auth }) => auth.error || {};\nexport const isAuth = ({ auth }) => auth.isLogin;\n"],"names":["onSubmit","initialState","email","password","useState","state","setState","handleChange","target","name","value","prevState","action","e","preventDefault","className","css","htmlFor","onChange","type","placeholder","dispatch","useDispatch","useSelector","getAuthError","status","message","isAuth","to","data","login","auth","error","isLogin"],"sourceRoot":""}