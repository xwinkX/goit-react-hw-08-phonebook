{"version":3,"file":"static/js/149.b66bfe8a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactForm/ContactForm.module.css?4d46","components/Contacts/ContactForm/ContactForm.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactItem/ContactItem.module.css?65d1","components/Contacts/ContactItem/ContactItem.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/ContactList/ContactList.module.css?357e","components/Contacts/ContactList/ContactList.js","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Filter/Filter.module.css?8ad8","components/Contacts/Filter/Filter.js","redux/filter/filter-actions.js","redux/contacts/contacts-selectors.js","redux/filter/filter-selector.js","components/Contacts/Contacts.jsx","pages/ContactsPages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__NTi+V\",\"input\":\"ContactForm_input__UVgk1\"};","import css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n// import { useCreateContactMutation } from '../../../redux/contacts/contactSlice';\n\nconst ContactForm = ({ onSubmit }) => {\n  const initialState = {\n    name: '',\n    number: '',\n  };\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    setState(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={css.contactForm} action=\"\" onSubmit={handleSubmit}>\n      <h2>Name</h2>\n      <label>\n        <input\n          type=\"text\"\n          onChange={handleChange}\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <h2>Number</h2>\n      <label>\n        <input\n          type=\"tel\"\n          onChange={handleChange}\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          className={css.input}\n        />\n      </label>\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"li\":\"ContactItem_li__Nu5s8\",\"p\":\"ContactItem_p__HySq+\",\"button\":\"ContactItem_button__PIPaE\"};","import css from './ContactItem.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number, onDelete }) => {\n\n  return (\n    <li className={css.li}>\n      <p className={css.p}>{name}</p>\n      <p>{number}</p>\n      <button className={css.button} onClick={() => onDelete(id)}>\n        Удалить\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"ul\":\"ContactList_ul__P0+L6\"};","import ContactItem from '../ContactItem/ContactItem';\nimport css from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n// import { useSelector } from 'react-redux';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  // const filter = useSelector(state => state.contact.filter);\n  // const normalizedFilter = filter.toLowerCase();\n  // const resultFilter = contacts.filter(contact =>\n  //   contact.name.toLowerCase().includes(normalizedFilter)\n  // );\n\n  return (\n    <ul className={css.ul}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDelete={onDelete}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"h2\":\"Filter_h2__ymgpe\"};","import css from './Filter.module.css';\n// import PropTypes from 'prop-types';\n// import { useDispatch } from 'react-redux';\n// import { filterContacts } from 'redux/contacts/contact';\n\nconst Filter = ({OnSetFilter, filter}) => {\n  // const dispatch = useDispatch();\n  return (\n    <>\n      <h2 className={css.h2}>Find contacts by name</h2>\n      <label>\n        <input\n          type=\"text\"\n          onChange={OnSetFilter}\n          value={filter}\n          name=\"filter\"\n        />\n      </label>\n    </>\n  );\n};\nexport default Filter;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const setFilter = createAction('filter/set');\n","export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n  return result;\n};\n","export const getFilter = ({ filter }) => filter;\n","import ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchContacts,\n  addContact,\n  removeContact,\n} from '../../redux/contacts/contacts-oparations';\n// import { getContacts } from 'redux/contacts/contacts-selectors';\nimport { setFilter } from '../../redux/filter/filter-actions';\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\nimport { getFilter } from '../../redux/filter/filter-selector';\n\n// import { addContact, removeContact } from 'api/contacts';\n// import {\n//   useDeleteContactMutation,\n//   useFetchContactsQuery,\n// } from '../../redux/contacts/contactSlice';\n\nconst Contacts = () => {\n  //   const { data, isFetching } = useFetchContactsQuery();\n  //   const [deleteContact] = useDeleteContactMutation();\n  const contacts = useSelector(getFilteredContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const onAddContact = payload => {\n    dispatch(addContact(payload));\n  };\n\n  const onRemoveContact = id => {\n    dispatch(removeContact(id));\n  };\n  const onSetFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: 16,\n        color: '#010101',\n      }}\n    >\n      <ContactForm onSubmit={onAddContact} />\n      <h2>Contacts</h2>\n      <Filter onSetFilter={onSetFilter} filter={filter} />\n      {/* {isFetching && <p>...loading</p>} */}\n      <ContactList contacts={contacts} onDelete={onRemoveContact} />\n    </div>\n  );\n};\n\nexport default Contacts;\n","import Contacts from 'components/Contacts/Contacts';\n\nconst ContactsPages = () => {\n  return (\n    <div>\n      <Contacts />\n    </div>\n  );\n};\n\nexport default ContactsPages;\n"],"names":["onSubmit","initialState","name","number","useState","state","setState","handleChange","target","value","prevState","className","css","action","e","preventDefault","type","onChange","pattern","title","required","id","onDelete","onClick","contacts","map","OnSetFilter","filter","setFilter","createAction","getFilteredContacts","items","normalizedFilter","toLowerCase","contact","includes","getFilter","useSelector","dispatch","useDispatch","useEffect","fetchContacts","style","display","flexDirection","justifyContent","alignItems","fontSize","color","payload","addContact","onSetFilter","removeContact"],"sourceRoot":""}